import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
// import Button from '../components/button'

import styles from '../styles/Home.module.css'
import { styled } from '@stitches/react';
import { violet, mauve, blackA, green } from '@radix-ui/colors';

import { useState } from "react"
import axios from "axios"

const BACKEND_API = "https://transcript-to-summaryChunks-recursive-alpha-v1.jonathanquaade.repl.co"

// Your app...
  const Container = styled('div', {
    display: 'flex',
    flexDirection: 'column',
    borderRadius: 6,
    width: 500,
    boxShadow: `0 2px 10px ${blackA.blackA4}`,
  });

  const InnerContainer = styled('div', {
    flexGrow: 1,
    padding: 20,
    backgroundColor: 'white',
    borderRadius: 6,
    outline: 'none',
    '&:focus': { boxShadow: `0 0 0 2px black` },
  });

  const Box = styled('div', {});
  const Flex = styled('div', { display: 'flex' });

  const Title = styled('div', {
    marginBottom: 20,
    color: 'black',
    fontSize: 15,
    lineHeight: 1.5,
  });

  const Text = styled('div', {
    marginBottom: 20,
    color: mauve.mauve11,
    fontSize: 15,
    lineHeight: 1.5,
  });

  const Button = styled('button', {
    all: 'unset',
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: 4,
    padding: '0 15px',
    fontSize: 15,
    lineHeight: 1,
    fontWeight: 500,
    height: 35,

    variants: {
      variant: {
        violet: {
          backgroundColor: 'white',
          color: violet.violet11,
          boxShadow: `0 2px 10px ${blackA.blackA7}`,
          '&:hover': { backgroundColor: mauve.mauve3 },
          '&:focus': { boxShadow: `0 0 0 2px black` },
        },
        green: {
          backgroundColor: green.green4,
          color: green.green11,
          '&:hover': { backgroundColor: green.green5 },
          '&:focus': { boxShadow: `0 0 0 2px ${green.green7}` },
        },
      },
    },

    defaultVariants: {
      variant: 'violet',
    },
  });

  const Fieldset = styled('fieldset', {
    all: 'unset',
    marginBottom: 15,
    width: '100%',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
  });

  const Label = styled('label', {
    fontSize: 13,
    lineHeight: 1,
    marginBottom: 10,
    color: violet.violet12,
    display: 'block',
  });

  const Input = styled('input', {
    all: 'unset',
    flex: '1 0 auto',
    borderRadius: 4,
    padding: '0 10px',
    fontSize: 15,
    lineHeight: 1,
    color: violet.violet11,
    boxShadow: `0 0 0 1px ${violet.violet7}`,
    height: 35,
    '&:focus': { boxShadow: `0 0 0 2px ${violet.violet8}` },
  });

  const TextArea = styled('textarea', {
    all: 'unset',
    flex: '1 0 auto',
    borderRadius: 4,
    padding: '10px 10px',
    fontSize: 15,
    lineHeight: 1,
    color: violet.violet11,
    boxShadow: `0 0 0 1px ${violet.violet7}`,
    height: 300,
    '&:focus': { boxShadow: `0 0 0 2px ${violet.violet8}` },
  });

const Home: NextPage = () => {

  const initialState = {title: "", transcript: ""}
  const [data, setData] = useState(initialState)

  const updateState = (type: string, value: string) => {
    console.log(type)
    console.log(value)
    setData((data) => ({ ...data, [type]: value }))
  }

  const submitData = async (e) => {
    e.preventDefault()

    await axios(BACKEND_API, {
      method: "post",
      data: { ...data },
      headers: {
        "Content-Type": "application/json",
      },
    })
    // setData({ title: "", transcript: "", })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Transcript To Summary Chunks-alpha</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <InnerContainer>
          <Box>
            <form onSubmit={submitData}>
              <Title>Transcript To Summary Chunks</Title>
              <Text>This transformer takes in a transcript and returns a concise summary.
                <br />
                Version: Alpha V1
              </Text>
              <Fieldset>
                <Label htmlFor="title2">Title</Label>
                <Input id="title" name="title" type="text" placeholder="Title of interview" onChange={(e) => updateState("title", e.target.value)} value={data.title} />
              </Fieldset>
              <Fieldset>
                <Label htmlFor="transcript">Transcript</Label>
                <TextArea id="transcript" name="transcript" onChange={(e) => updateState("transcript", e.target.value)} value={data.transcript} placeholder="Paste your transcript here"/>
              </Fieldset>
              <Flex css={{ marginTop: 20, justifyContent: 'flex-end' }}>
                <Button disabled={
                  !data.title.length || !data.transcript.length
                }
                  type="submit" variant="violet">Summarise</Button>
              </Flex>
            </form>
          </Box>
        </InnerContainer>
      </Container>
    </div>
  )
}

export default Home
